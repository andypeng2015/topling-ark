Import("env")

terarkLib = ''
if GetOption('dbg') == 'on':
    terarkLib = ['terark-d']
else:
    terarkLib = ['terark-r']

env.Library(
    target= 'storage_terark_base',
    source= [
        'src/terark_engine.cpp',
        'src/terark_btree_impl.cpp',
        'src/terark_readonly_record_store.cpp',
        'src/terark_writting_record_store.cpp',
        'src/terark_recovery_unit.cpp',
        'src/index_key.cpp',
        'src/record_codec.cpp',
        ],
    LIBDEPS= [
        '$BUILD_DIR/mongo/base',
        '$BUILD_DIR/mongo/db/namespace_string',
        '$BUILD_DIR/mongo/db/catalog/collection_options',
        '$BUILD_DIR/mongo/db/index/index_descriptor',
        '$BUILD_DIR/mongo/db/storage/bson_collection_catalog_entry',
        '$BUILD_DIR/mongo/db/storage/index_entry_comparison',
        '$BUILD_DIR/mongo/db/storage/key_string',
        '$BUILD_DIR/mongo/util/foundation',
        '$BUILD_DIR/mongo/util/processinfo',
        ],
    SYSLIBDEPS=terarkLib
    )

env.Library(
    target= 'storage_terark',
    source= [
        'src/terark_init.cpp',
        ],
    LIBDEPS= [
        'storage_terark_base',
        '$BUILD_DIR/mongo/db/storage/kv/kv_engine'
        ],
    LIBDEPS_DEPENDENTS=['$BUILD_DIR/mongo/db/serveronly']
    )

